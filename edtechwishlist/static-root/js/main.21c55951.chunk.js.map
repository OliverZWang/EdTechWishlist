{"version":3,"sources":["logo.svg","ideas/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["IdeasComponent","props","textAreaRef","React","createRef","useState","newIdeas","setNewIdeas","className","onSubmit","event","preventDefault","newValue","current","value","console","log","ref","required","name","type","IdeasList","ideas","setIdeas","useEffect","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadIdeas","alert","map","item","index","Idea","idea","ActionButton","action","actionDisplay","display","onClick","id","content","user","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","document","getElementById","ReactDOM","render","StrictMode","ideasElement"],"mappings":"2NAAe,G,MAAA,IAA0B,kC,eCKlC,SAASA,EAAeC,GAE3B,IAAMC,EAAcC,IAAMC,YAFO,EAGDC,mBAAS,IAHR,mBAG1BC,EAH0B,KAGhBC,EAHgB,KAmBjC,OAAO,sBAAKC,UAAWP,EAAMO,UAAtB,UACH,qBAAKA,UAAU,cAAf,SACI,uBAAMC,SAjBO,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAWV,EAAYW,QAAQC,MACrCC,QAAQC,IAAIJ,GAQZL,EAAYK,GACZV,EAAYW,QAAQC,MAAQ,IAKxB,UACI,0BAAUG,IAAKf,EAAagB,UAAU,EAAMV,UAAU,eAAeW,KAAK,SAG1E,wBAAQC,KAAK,SAASZ,UAAU,uBAAhC,4BAGR,cAACa,EAAD,CAAWf,SAAUA,OAItB,SAASe,EAAUpB,GAAM,MAGFI,mBAAS,IAHP,mBAGrBiB,EAHqB,KAGdC,EAHc,KA0B1B,OAbFC,qBAAU,YC/CP,SAAmBC,GACtB,IAAMC,EAAM,IAAIC,eAIhBD,EAAIE,aADiB,OAErBF,EAAIG,KAJW,MACH,qCAIZH,EAAII,OAAS,WAETL,EAASC,EAAIK,SAAJ,SAA0BL,EAAIM,SAG3CN,EAAIO,QAAU,SAASC,GACnBnB,QAAQC,IAAIkB,GACZT,EAAS,CAAC,QAAW,4BAA6B,MAEtDC,EAAIS,ODyCAC,EATmB,SAACL,EAAUC,GAEb,MAAXA,EAEFT,EAASQ,GAETM,MAAM,2BAIT,CAACf,IAEGA,EAAMgB,KAAI,SAACC,EAAMC,GACtB,OAAO,cAACC,EAAD,CAAMC,KAAMH,EAAM/B,UAAU,oBAA5B,UAAuDgC,EAAvD,kBAIR,SAASG,EAAa1C,GAAO,IACzB2C,EAAU3C,EAAV2C,OAEDpC,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,yBAChDqC,EAAgBD,EAAOE,QAAUF,EAAOE,QAAU,SAU5D,OAAO,yBAAQtC,UAAWA,EAAWuC,QATb,SAACrC,GACjBA,EAAMC,iBACc,WAAhBiC,EAAOxB,MACPL,QAAQC,IAAI,8BAMjB,UAAsD6B,EAAtD,OAGA,SAASJ,EAAKxC,GAAO,IACjByC,EAAQzC,EAARyC,KACDlC,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,0BACtD,OAAO,sBAAKA,UAAWA,EAAhB,UACH,8BAAIkC,EAAKM,GAAT,MAAgBN,EAAKO,QAArB,MAAiCP,EAAKQ,QACtC,gCACI,cAACP,EAAD,CAAcD,KAAMA,EAAME,OAAQ,CAACxB,KAAM,SAAU0B,QAAS,YAC5D,uBACA,cAACH,EAAD,CAAcD,KAAMA,EAAME,OAAQ,CAACxB,KAAM,UAAW0B,QAAS,mBEzD1DK,MA7Bf,WAME,OACE,qBAAK3C,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK4C,IAAKC,EAAM7C,UAAU,WAAW8C,IAAI,SACzC,sCACO,8CADP,0BAGA,8BACI,cAACtD,EAAD,MAEJ,mBACEQ,UAAU,WACV+C,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCXOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCRQ,EAAaC,SAASC,eAAe,QACxCF,GACCG,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,GAIR,IAAMM,EAAeL,SAASC,eAAe,mBAC1CI,GACCH,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAACxE,EAAD,MAEFyE,GASRf,M","file":"static/js/main.21c55951.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useEffect, useState} from 'react'\n\n\nimport {loadIdeas} from '../lookup'\n\nexport function IdeasComponent(props){\n\n    const textAreaRef = React.createRef()\n    const [newIdeas, setNewIdeas] = useState([])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue = textAreaRef.current.value\n        console.log(newValue)\n        // let tempNewIdeas = [...newIdeas]\n        //unshift put the new idea on top\n        //TO DO: Change this to a server side call\n        // tempNewIdeas.unshift({\n        //     content: newValue, \n        //     id: 123\n        // })\n        setNewIdeas(newValue)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='idea'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Post Idea</button>\n            </form>\n        </div>\n        <IdeasList newIdeas={newIdeas}/>\n    </div> \n}\n\nexport function IdeasList(props){\n\n    // const [ideasInit, setIdeasInit] = useState([])\n    const [ideas, setIdeas] = useState([])\n    // setIdeasInit([...props.newIdeas].concat(ideasInit))\n    // console.log(props.newIdeas)\n    // useEffect(()=>{\n    //     const final = [...props.newIdeas].concat(ideasInit)\n    //     if (final.length !== ideas.length){\n    //         setIdeas(final)\n    //     }\n        \n    // }, [props.newIdeas, ideas, ideasInit])\n    useEffect(() => {\n        const myCallback = (response, status) => {\n        //   console.log(response, status)\n          if (status === 200){\n            //   const finalIdeasInit = [...response].concat(ideasInit)\n            setIdeas(response)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        loadIdeas(myCallback)\n      }, [ideas])\n\n      return ideas.map((item, index)=>{\n        return <Idea idea={item} className='my-5 py-5 border' key={`${index}-{item.id}`}/>\n    })\n}\n\nexport function ActionButton(props){\n    const {action} = props\n    // const [justClicked, setJustClicked] = useState(1)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleClick = (event) =>{\n        event.preventDefault()\n        if (action.type === 'delete'){\n            console.log(\"Trying to delete the idea\")\n            \n            // setJustClicked(justClicked+1)\n            \n        }\n    }\nreturn <button className={className} onClick={handleClick} >{actionDisplay} </button>\n}\n\nexport function Idea(props){\n    const {idea} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n        <p>{idea.id} - {idea.content} - {idea.user}</p>\n        <div>\n            <ActionButton idea={idea} action={{type: \"delete\", display: \"Delete\"}} />\n            <br/>\n            <ActionButton idea={idea} action={{type: \"comment\", display: \"Comment\"}} />\n        </div>\n    </div>\n}","\n\n\nexport function loadIdeas(callback){\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = 'http://localhost:8000/ideas/list/'\n    const responseType = 'json'\n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function(){\n        // console.log(\"Response is\"+xhr.response['response'])\n        callback(xhr.response[\"response\"], xhr.status)\n\n    }\n    xhr.onerror = function(e){\n        console.log(e)\n        callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send()\n\n}","// useEffect allows us to run HTTP request\nimport React from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\n\nimport {IdeasComponent} from './ideas'\n\nfunction App() {\n    \n \n    \n//   [] is where the dependencies go\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n            <IdeasComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {IdeasComponent} from './ideas'\n\n\nconst appElement = document.getElementById(\"root\")\nif(appElement){\n    ReactDOM.render(\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>,\n        appElement\n      );\n}\n\nconst ideasElement = document.getElementById(\"edtech-wishlist\")\nif(ideasElement){  \n    ReactDOM.render(\n        <React.StrictMode>\n          <IdeasComponent />\n        </React.StrictMode>,\n        ideasElement\n      );\n}\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}